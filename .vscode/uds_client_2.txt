def display_centered_text(self, text):
    self.clear()
    
    # Estimate font height
    _, _, _, line_height = self.draw.textbbox((0, 0), "A", font=self.font)
    max_lines = self.height // line_height

    # Split input into lines, then wrap each line if too long
    raw_lines = text.split('\n')
    wrapped_lines = []
    for line in raw_lines:
        words = line.split()
        current_line = ""
        for word in words:
            test_line = f"{current_line} {word}".strip()
            bbox = self.draw.textbbox((0, 0), test_line, font=self.font)
            line_width = bbox[2] - bbox[0]
            if line_width <= self.width:
                current_line = test_line
            else:
                if current_line:
                    wrapped_lines.append(current_line)
                current_line = word
        if current_line:
            wrapped_lines.append(current_line)

    # Trim if too many lines
    wrapped_lines = wrapped_lines[:max_lines]

    # Center vertically
    total_height = len(wrapped_lines) * line_height
    y_offset = (self.height - total_height) // 2

    for i, line in enumerate(wrapped_lines):
        bbox = self.draw.textbbox((0, 0), line, font=self.font)
        line_width = bbox[2] - bbox[0]
        x = (self.width - line_width) // 2
        y = y_offset + i * line_height
        self.draw.text((x, y), line, font=self.font, fill=255)

    self.display.image(self.image)
    self.display.show()
