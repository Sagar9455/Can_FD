import textwrap

def display_centered_text(self, text):
    self.clear()

    # Estimate character width using textbbox on "W"
    bbox = self.draw.textbbox((0, 0), "W", font=self.font)
    char_width = bbox[2] - bbox[0]
    char_height = bbox[3] - bbox[1]

    max_chars_per_line = self.width // char_width
    max_lines = self.height // char_height

    # Wrap long lines
    wrapped_lines = []
    for paragraph in text.split('\n'):
        wrapped = textwrap.wrap(paragraph, width=max_chars_per_line)
        wrapped_lines.extend(wrapped)

    # Trim lines to fit the screen
    if len(wrapped_lines) > max_lines:
        wrapped_lines = wrapped_lines[:max_lines]

    # Calculate Y offset for vertical centering
    total_text_height = char_height * len(wrapped_lines)
    y_offset = (self.height - total_text_height) // 2

    # Draw each line centered
    for i, line in enumerate(wrapped_lines):
        bbox = self.draw.textbbox((0, 0), line, font=self.font)
        line_width = bbox[2] - bbox[0]
        x = (self.width - line_width) // 2
        y = y_offset + i * char_height
        self.draw.text((x, y), line, font=self.font, fill=255)

    self.display.image(self.image)
    self.display.show()
