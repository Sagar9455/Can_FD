def get_ecu_information(self, oled):
    min_required = 50
    enough_space, free_mb = self.check_disk_space(min_required_mb=min_required)

    if not enough_space:
        warning_msg = f"Low Storage!\nOnly {free_mb}MB left.\nNeed {min_required}MB."
        oled.display_centered_text(warning_msg)
        logging.warning(warning_msg)
        time.sleep(4)
        return

    oled.display_centered_text(f"âœ” Storage OK\nFree: {free_mb} MB")
    logging.info(f"Storage check passed: {free_mb} MB available")
    time.sleep(2)

    self.start_logging(log_name_suffix="ECU_Info")

    session_default = int(self.uds_config["default_session"], 16)
    session_extended = int(self.uds_config["extended_session"], 16)

    with Client(self.conn, request_timeout=2, config=self.client_config) as client:
        try:
            client.change_session(session_default)
            time.sleep(0.2)
            client.change_session(session_extended)
            time.sleep(0.2)
        except Exception as e:
            oled.display_centered_text(f"Session Error:\n{str(e)}")
            logging.error(f"Session change failed: {e}")
            self.stop_logging()
            return

        for did_hex, info in self.info_dids.items():
            label = info["label"]
            did = int(did_hex, 16)

            try:
                response = client.read_data_by_identifier(did)
                if response.positive:
                    values = response.service_data.values[did]
                    hex_str = ' '.join(f"{b:02X}" for b in values)
                    display_text = f"{label}\n{hex_str}"
                    oled.display_centered_text(display_text)
                    logging.info(f"[ECU Info] {label} ({did_hex}) = {hex_str}")
                else:
                    nrc = hex(response.code)
                    oled.display_centered_text(f"{label}\nNRC: {nrc}")
                    logging.warning(f"[ECU Info] {label} - Negative Response Code: {nrc}")
            except Exception as e:
                error_msg = str(e)[:40]
                oled.display_centered_text(f"{label}\nError: {error_msg}")
                logging.error(f"[ECU Info] {label} - Exception: {e}")

            time.sleep(3)  # allow user to read
    self.stop_logging()
