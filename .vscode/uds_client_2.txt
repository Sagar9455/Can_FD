import os
import can
import time
import logging
from datetime import datetime
from can.io.asc import ASCWriter

class CANLogger:
    def __init__(self, channel='can0', interface='socketcan', can_fd=True, log_dir='/home/mobase/Inte_Project/output/can_logs'):
        self.channel = channel
        self.interface = interface
        self.can_fd = can_fd
        self.log_dir = log_dir

        self.bus = None
        self.notifier = None
        self.writer = None
        self.log_path = None

    def start(self):
        """
        Start CAN bus logging to a .asc file.
        """
        os.makedirs(self.log_dir, exist_ok=True)

        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        self.log_path = os.path.join(self.log_dir, f"can_log_{timestamp}.asc")

        try:
            self.bus = can.interface.Bus(channel=self.channel, bustype=self.interface, fd=self.can_fd)

            # Open ASC file writer
            self.writer = ASCWriter(open(self.log_path, 'w'))

            # Attach a Listener to handle both RX and TX messages
            self.notifier = can.Notifier(self.bus, [self.writer])

            logging.info(f"CAN logging started: {self.log_path}")
        except Exception as e:
            logging.error(f"Failed to start CAN logger: {e}")

    def stop(self):
        """
        Stop CAN logging and release resources.
        """
        if self.notifier:
            self.notifier.stop()

        if self.writer:
            self.writer.stop()
            logging.info(f"CAN logging stopped: {self.log_path}")
            print(f"[CANLogger] Log file saved to: {self.log_path}")

        self.bus = None
        self.writer = None
        self.notifier = None

    def get_log_path(self):
        return self.log_path
